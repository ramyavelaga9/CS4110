// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP CS16B032PC16 {
    IN in[16],load,inc0,inc1,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=nreset);
    Mux16(a=in, b=net5, sel=load, out=net1);
    And16(a[0]=nreset,a[1]=nreset,a[2]=nreset,a[3]=nreset,a[4]=nreset,a[5]=nreset,a[6]=nreset,a[7]=nreset,a[8]=nreset,a[9]=nreset,a[10]=nreset,a[11]=nreset,a[12]=nreset,a[13]=nreset,a[14]=nreset,a[15]=nreset, b=net1, out=net2);
    CS16B032DFF16(in=net2,out=net3);
    Mux4Way16(a[0..15]=false, b[1..15]=false,b[0]=true,c[2..15]=false,c[0]=false,c[1]=true,d[3..15]=false,d[0]=false,d[1]=false,d[2]=true, sel[0]=inc1,sel[1]=inc0, out=net4);
//    Mux4Way16(a[0..15]=false, b[0..15]=false, c[0..15]=false, d[0..15]=false, sel[1]=inc0,sel[0]=inc1, out=net4);
    Add16(a=net3, b=net4, out=net5,out=out);

    

    
}
